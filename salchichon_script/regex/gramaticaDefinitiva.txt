<program> ::= <listaSentencias><main><listaFunciones>
             | <listaSentencias><main>
             | <main><listaFunciones>
             | <main>

<listaSentencias> ::= <sentencia><finalExpresion><listaSentencias>
                     | <sentencia><finalExpresion>

<main> ::= "void""main"<abrirParentesis><cerrarParentesis><abreBloque><listaSentencias><cerrarBloque>

<listaFunciones> ::= <funcion><finalExpresion><listaFunciones>
                   | <funcion><finalExpresion>

<funcion> ::= <tipo><identificador><abrirParentesis><listaParametrosFuncion><cerrarParentesis><abreBloque><listaSentencias><cerrarBloque>
             | "void"<identificador><abrirParentesis><listaParametrosFuncion><cerrarParentesis><abreBloque><listaSentencias><cerrarBloque>

<listaParametrosFuncion> ::= <parametroFuncion>,<listaParametrosFuncion>
                           | <parametroFuncion>

<parametroFuncion> ::= <tipo><identificador>

<sentencia> ::= <declaracion>
               | <asignacion>
               | <condicional>
               | <bucle>
               | <bloqueFor>
               | "break"
               | <retorno>
               | <leerEntrada>
               | <imprimirElementos>
               | <expresion>

<declaracion> ::= "let"<tipo><identificador>
                 | "let"<tipo><identificador>=<expresion>

<asignacion> ::= <lvalue>=<expresion>

<lvalue> ::= <identificador>
            | <accesoArreglo>

<accesoArreglo> ::= <identificador><abreBloque><expresion><cerrarBLoque>

<expresion> ::= <expresionLogica>

<expresionLogica> ::= <expresionRelacional>~<expresionLogica>
                     | <expresionRelacional>@<expresionLogica>
                     | 'Σ'<expresionLogica>
                     | <expresionRelacional>

<expresionRelacional> ::= <expresionAritmetica><operadorRelacional><expresionRelacional>
                         | <expresionAritmetica>

<operadorRelacional> ::= "<" | "<=" | ">" | ">=" | "==" | "!="

<expresionAritmetica> ::= <termino>+<expresionAritmetica>
                         | <termino>-<expresionAritmetica>
                         | <termino>

<termino> ::= <factor>*<termino>
             | <factor>/<termino>
             | <factor>//<termino>
             | <factor>%<termino>
             | <factor>

<factor> ::= <potencia>^<factor>
            | <potencia>

<potencia> ::= <abrirParentesis><expresion><cerrarParentesis>
              | <elemento>

<elemento> ::= <literal>
              | <identificador>
              | <accesoArreglo>
              | <llamadaFuncion>
              | <operacionUnaria>

<operacionUnaria> ::= -<elemento>
                    | ++<elemento>
                    | --<elemento>
                    | <elemento>++
                    | <elemento>--

<literal> ::= <definicionEntero>
             | <definicionFlotante>
             | "True"
             | "False"
             | <definicionChar>
             | <cadena>

<llamadaFuncion> ::= <identificador><abrirParentesis><listaArgumentos><cerrarParentesis>
                   | <identificador><abrirParentesis><cerrarParentesis>

<listaArgumentos> ::= <expresion>,<listaArgumentos>
                    | <expresion>

<condicional> ::= "decideof"<abrirParentesis><expresion><cerrarParentesis>-><abreBloque><listaSentencias><cerrarBloque> ("else"-><abreBloque><listaSentencias><cerrarBloque>)?"enddecide"

<bucle> ::= "loop"<abreBloque><listaSentencias><cerrarBloque> "exitwhen"<abrirParentesis><expresion><cerrarParentesis>$"endloop"

<bloqueFor> ::= "for"<abrirParentesis><asignacion><cerrarParentesis>"step"<definicionNatural>("to"|"downto")<expresion>"do"<abreBloque><listaSentencias><cerrarBLoque>

<retorno> ::= "return"<expresion>
             | "return"

<leerEntrada> ::= "input"<identificador>

<imprimirElementos> ::= "output"<abrirParentesis><expresion><cerrarParentesis>

<definicionEntero> ::= <cero> | -<digito><digitoCero>*
<definicionNatural> ::= <digito><digitoCero>*
<definicionFlotante> ::= <definicionEntero>.<definicionNatural>
<definicionChar> ::= '<caracter>'
<cadena> ::= "<caracteres>"
<identificador> ::= <letra><caracterIdentificador>*
<caracterIdentificador> ::= <letra> | <digitoCero> | _
<tipo> ::= "int" | "float" | "boolean" | "char" | "String"

<!-- Terminales atómicos -->
<digitoCero> ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9
<digito> ::= 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9
<cero> ::= 0
<letra> ::= a | b | c | ... | z | A | B | C | ... | Z
<caracter> ::= <cualquier carácter excepto '>
<caracteres> ::= <cualquier secuencia de caracteres excepto ">
<finalExpresion> ::= $
<abreBloque> ::= "¿"
<cerrarBloque> ::= "?"
<abrirParentesis> ::= "є"
<cerrarParentesis> ::= "э"


